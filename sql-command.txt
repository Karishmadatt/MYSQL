1. mysql -u root -p
2. password 58413Ka@123
3. show databases;
4. uses (name of the databases);
2.create table [name of the table] ( name of the column1  datatype, name of the column2 datatypes .....)
eg create table student (id int ,name varchar(100) , age int );
u can describe more property of the column like primary key  eg id int primary key .
3. describe [table name] 
eg describe student;
u will get to know the proper description of the table.
4. for insert the values in the table use the 'insert ' command;
eg insert into student values(1,'karishma',23);
or 
u can also insert only specific values like 
insert into student (id,age) values (1,23);
5. for remaming the tabel name use 'rename' command;
rename  table oldname to newname;
eg : rename table student to std;
6. for adding the new column to the table use 'alter add' command 
syntax: alter table tablename add(column name datatype);
eg alter table student add(test int default '100');
7. for changing the datatype of the column use 'alter modify' command;
syntax : alter table table name modify column column name datatype;
eg :alter table student modify column age int;
8. for remanaming the column name or changing the column name use 'alter change' command
syntax : alter table table name old column name new column name datatype;
eg: alter table student change id ID int;
9. for deleting the column name use command 'drop';
syntax : alter table table name drop column name;
eg : alter table student drop test;
10: for delecting the table/database use command 'drop';
syntax : drop table tablename;
syntax : drop database databasename;
eg drop table student;
11: for delection the content of the table but not the structure of the table use 'truncate' command;
syntax : truncate table name;
eg : truncate student;

DML command :
1.select
2.insert
3.update
4.delete

12.to update the value of the column use command 'update'
syntax : update table-name set column-name = "[value of the column]";
eg : update student set age = 100;
difference between truncate and delete
truncate command will delete all the rows or content of the table but delete command is use to delete specific row but if delete command is not written with condition it will behave like the truncate command.
eg : delete from student;
it  will delete all the rows of the student behave like the truncate command.

13. Aggregate function
1.AVG
2.MAX
3.MIN
4.SUM
5.COUNT()
6.COUNT(*)

from 1-5 all the function uses non-null values they skip all the null value except COUNT(*)
1.AVG()
syntax select avg(column-name) from table-name;
eg : select avg(salary) from employ;
this query will give the average of the salary column from the exploy table.
if we will find the average of the column which have datatype varchar then the output will be 0.
eg : select avg(name) from employ;
output : 0

2.MAX()
syntax : select max(column-name) from table-name;
eg: select max(salary) from employ;

3.MIN()
syntax : select min(column-name) from table-name;
eg : select min(salary) from employ;

we can use both the max and min function together
eg : select max(salary) , min(age) from employ;

4.SUM()
syntax : select sum(column-name) from table-name;
eg : select sum(salary) from employ;
if we will find the sum of the column which have datatype varchar then the ouput will be 0.

5.COUNT()
syntax : select count(column-name) from table-name;
eg : select count(name) from employ;
count will give the number of the non-null row 

6.COUNT(*)
syntax : select count(*) from tablename;
eg : select count(*) from employ;
count(*) will give the count of total number of row including null rows also

DRL/DSL command (stands for "Data retreival language"/"Data selection language")
It is the set commands which is use to retreive the data from the database server.It manipulate the data from the database for
display purpose like Aggregate function
In DRL/DSL , for accessing the data it uses DML command that is "SELECT" 
The select command allows the database user to retreive specific information from the database
>FROM
>WHERE
>GROUP BY
>HAVING
>ORDER BY
>AS

1.WHERE
where cause works exactly same as if condition of the programming language.
where can be used with 
>select
>update
>delect
>Aggregate function
syntax for select: select column-name from tablename WHERE condition;
eg : select * from employ where age>25;
eg : select * from fac where name = "karishma";
eg : select name from student where location = "Delhi";
eg : select name from student where name = "Karishma"  AND age >25;
syntax for update : update columnname set column = "value" where condition;
eg : update student set name = "kiran" where name = "karishma";
syntax for delete : delect from tablename where condition;
eg : delete from student where age>25;
syntax fro Aggregate function : select Aggregate() from tablename where condition
eg : select max(salary) from exploy where age > 30;

2.GROUP BY clause
use to group the rows that have same values
GROUP BY clause return one row for each group.
syntax : select columnname from tablename GROUP BY columnname;
eg : select location,count(*) from employ GROUP BY location;
eg : select id,name from employ group by id;
the id and the name will be display ,the name and id of the first row of the group will be displayed.

3.HAVING clause
having clause was add to sql because the where clause could not be used with the group function.Having close is used in the
select statement to specify the filter condition for the group of rows or Aggregates
having clause is often used with the group by clause to filter the groups based on the specific condition.if group by clause is
ommited the having clause behave like a where clause.
syntax: select columnname from tablename groupby columnname having condition
eg : select name from student groupby id having percentage > 80;

4.ORDER BY
used to display in particular order in ascending or descending . By default it display in ascending order
syntax : select columnname from tablename order by columnname.
eg : select * from student order by age;
syntax for  descending : select columnname from tablename order by desc columnname

5. Alias (as)
it is like local variable use to give the name to the columnname 
syntax : select columnname as newname from tablename;
eg : select location , count(*) as count_student from student groupby location;

Distinct keyword
syntax : select Distinct columnname from tablename;
eg : select Distinct name from student;
eg : select Distinct name , subject from student;
groupby behaves like the Distinct if used without Aggregate function
difference between groupby and Distinct is groupby sort the result where as Distinct do not.
Distinct is also used with the Aggregate function
syntax : select Aggregate function( Distinct columnname) from tablename;
eg : select count(Distinct name) from student;

Limit keyword
use to give the limit of number of rows;
eg : select * from student where age>20 limit 4;

In keyword
it is the shorthand of the multiple OR operator
syntax : select columnname from student where columnname in(); 
eg : select * from student where age in(20,24);
eg : select 10 in(10,20,30); it will return 1 
eg : select 40 in (10,20,30); it will return 0;
will can neglect the 'in' keyword by using 'not in' keyword.

between keyword
between keyword will give the ouput within the range
eg: select * from student where age between 20 and 23.
we can neglect the 'between' keyword by using 'not between' keyword.

like operator
% means 0,1 or multiple character
_ means placeholder for only one character
like "s%" means all the name starting with s.
escape operator : if we want '%' operator as a character in the string then then we use escape operator
Let's say you wanted to search for a % or a _ character in the MySQL
LIKE condition. You can do this using an Escape character.By default '\' is the escape modifier.
• SELECT * FROM table_name WHERE column_name LIKE 'G\%';
• We can override the default escape character in MySQL by providing
the ESCAPE modifier as follows:
• SELECT * FROM table_name WHERE column_name LIKE 'G!%'
ESCAPE '!';

